const m=(r,t,e,s)=>{const o=new Uint8Array(r.memory.buffer,t,e),a=new Uint8Array(o.length);return a.set(o),r.exports.mfree(t,s),a},_=(r,t)=>{const e=new Uint32Array(r.memory.buffer,t,3),s=e[0],o=e[1],a=e[2];return r.exports.mfree(t,12),m(r,s,o,a)},b=(r,t)=>{const e=r.exports.malloc(t.length);return new Uint8Array(r.memory.buffer).set(t,e),e},g=async r=>{let t=null;const e=new TextDecoder("utf-8"),s={alert:(u,l,p)=>{if(!t)return;const d=m(t,u,l,p),h=e.decode(d);console.error(h)},print:(u,l,p)=>{if(!t)return;const d=m(t,u,l,p),h=e.decode(d);console.log(h)}},a=await(await fetch(r)).arrayBuffer(),y=await WebAssembly.instantiate(a,{env:s});return t={exports:y.instance.exports,memory:y.instance.exports.memory},t};class v{ptr;width;height;module;constructor(t,e,s){this.ptr=t.exports.create_canvas(e,s),this.width=e,this.height=s,this.module=t}get_bytes(){if(this.ptr<0)return null;const t=this.module.exports.canvas_pixels(this.ptr);return _(this.module,t)}clear(){this.module.exports.canvas_clear(this.ptr)}destroy(){if(this.ptr<0)return null;this.module.exports.destroy_canvas(this.ptr),this.ptr=-1}}const A=new TextEncoder;class M{ptr;module;constructor(t,e){const s=A.encode(e),o=b(t,s);this.ptr=t.exports.create_cpu(o,s.length),this.module=t}run(t,e){this.ptr<0||this.module.exports.cpu_run(this.ptr,t.ptr,e)}destroy(){this.ptr<0||(this.module.exports.destroy_cpu(this.ptr),this.ptr=-1)}is_halted(){return this.ptr<0?!0:this.module.exports.cpu_is_halted(this.ptr)>0}}const w=await g("../wasm/wasm32-unknown-unknown/release/trtl.wasm");let c=null,n=null,i=null,f=0;const x=()=>{if(c==null||n==null||i==null||c.is_halted())return;c.run(n,4e3);const r=n.get_bytes();r&&(i.data.set(r),postMessage(i)),f=requestAnimationFrame(x)};onmessage=async r=>{f!=0&&cancelAnimationFrame(f);const{input:t,width:e,height:s}=r.data;c?.destroy(),c=new M(w,t),n==null||n.width!=e||n.height!=s?(n?.destroy(),n=new v(w,e,s),i=new ImageData(e,s)):n.clear(),x()};postMessage(1);
